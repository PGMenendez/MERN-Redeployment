{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulmenendez/Documents/CodingDojo/MERN/MERNTemps/belt3/client/src/components/ShowAll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport '../App.css';\nlet today = new Date().toLocaleDateString();\nconsole.log(today);\n\nconst ShowAll = props => {\n  _s();\n\n  const [allProjects, setAllProjects] = useState([]);\n  const [backlog, setBacklog] = useState();\n  const [inProgress, setInProgress] = useState();\n  const [completed, setCompleted] = useState();\n  const [name, setName] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/Projects\").then(res => {\n      console.log(res.data);\n      setAllProjects(res.data);\n    }).catch(err => console.log(err));\n  }, []); // const deleteProject = (e, ProjectId) => {\n  //     e.preventDefault();\n  //     axios\n  //         .delete(`http://localhost:8000/api/Projects/${ProjectId}`)\n  //         .then((res) => {\n  //             console.log(res.data);\n  //             setAllProjects(allProjects.filter((Project) => Project._id !== ProjectId))\n  //         })\n  //         .catch((err) => console.log(err));\n  // }\n\n  const backlogToInProgress = () => {\n    e.preventDefault(); // console.log(`Backlog is ${Project.backlog}`)\n\n    console.log(\"my backlog function\");\n    let updatedProject = Project;\n\n    if (updatedProject.backlog === true) {\n      updatedProject.backlog = false;\n      updatedProject.inProgress = true;\n    } else {\n      //if (Project.hasPegLeg === false){\n      updatedProject.backlog = true;\n    }\n\n    setBacklog(updatedProject.backlog);\n    setInProgress(updatedProject.inProgress); // set is asyncrhonous\n\n    console.log(`backlog is ${updatedProject.hasPegLeg} and in Progress is ${updatedProject.inProgress}`);\n    axios.put(`http://localhost:8000/api/Projects/${props.id}`, updatedProject).then(res => {\n      navigate(`/`);\n    }).catch(err => console.log(err));\n  }; // console.log(\"backlog button clicked\")\n  // setBacklog(false);\n  // setInProgress(true);\n  // console.log(Project)\n  // if(backlog===false){\n  //   axios\n  //   .put(`http://localhost:8000/api/Projects/${props.id}`, {\n  //       name: name,\n  //       dueDate: dueDate,\n  //       backlog: backlog,\n  //       inProgress: inProgress,\n  //       completed: completed,\n  //   })\n  //   .then((res) => {\n  //       console.log(res);\n  //       navigate('/');\n  //   })\n  //   .catch((err) => console.log(err));\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Project Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Backlog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), allProjects.map((Project, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: Project.backlog ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"projectThumb\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline-block\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: Project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Due Date: \", Project.dueDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"redButton\",\n                onClick: e => backlogToInProgress(e),\n                children: \"Start Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Projects/new\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"blueButton\",\n          children: \"Add New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ShowAll, \"tovgwgOAgIR4lB/3x/f5n1RUxO4=\");\n\n_c = ShowAll;\nexport default ShowAll;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowAll\");","map":{"version":3,"sources":["/Users/paulmenendez/Documents/CodingDojo/MERN/MERNTemps/belt3/client/src/components/ShowAll.js"],"names":["React","useState","useEffect","Link","navigate","axios","today","Date","toLocaleDateString","console","log","ShowAll","props","allProjects","setAllProjects","backlog","setBacklog","inProgress","setInProgress","completed","setCompleted","name","setName","dueDate","setDueDate","get","then","res","data","catch","err","backlogToInProgress","e","preventDefault","updatedProject","Project","hasPegLeg","put","id","map","i","display"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport {Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport '../App.css';\n\nlet today = new Date().toLocaleDateString();\n\n\n\n\nconsole.log(today);\n\nconst ShowAll = (props) => {\n    const [allProjects, setAllProjects] = useState([]);\n    const [backlog, setBacklog] = useState();\n    const [inProgress, setInProgress] = useState();\n    const [completed, setCompleted] = useState();\n    const [name, setName] = useState(\"\");\n    const [dueDate, setDueDate] = useState(\"\");\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:8000/api/Projects\")\n            .then((res) => {\n                console.log(res.data);\n                setAllProjects(res.data);\n              })\n            .catch(err => console.log(err));\n        \n    }, [])\n\n    // const deleteProject = (e, ProjectId) => {\n    //     e.preventDefault();\n    //     axios\n    //         .delete(`http://localhost:8000/api/Projects/${ProjectId}`)\n    //         .then((res) => {\n    //             console.log(res.data);\n    //             setAllProjects(allProjects.filter((Project) => Project._id !== ProjectId))\n    //         })\n    //         .catch((err) => console.log(err));\n    // }\n\n    const backlogToInProgress = () => {\n      e.preventDefault();\n\n      // console.log(`Backlog is ${Project.backlog}`)\n        console.log(\"my backlog function\")\n        let updatedProject = Project;\n\n        if (updatedProject.backlog===true){\n            updatedProject.backlog = false;\n            updatedProject.inProgress = true;\n        }\n        else { //if (Project.hasPegLeg === false){\n            updatedProject.backlog = true;\n        }\n        setBacklog(updatedProject.backlog);\n        setInProgress(updatedProject.inProgress);  // set is asyncrhonous\n        console.log(`backlog is ${updatedProject.hasPegLeg} and in Progress is ${updatedProject.inProgress}`);\n        axios\n            .put(`http://localhost:8000/api/Projects/${props.id}`, updatedProject)\n        .then((res) => {\n                navigate(`/`)   \n        })\n        .catch((err)=>console.log(err));\n    }\n\n\n\n\n      // console.log(\"backlog button clicked\")\n      // setBacklog(false);\n      // setInProgress(true);\n      // console.log(Project)\n      \n      // if(backlog===false){\n        \n      //   axios\n      //   .put(`http://localhost:8000/api/Projects/${props.id}`, {\n      //       name: name,\n      //       dueDate: dueDate,\n      //       backlog: backlog,\n      //       inProgress: inProgress,\n      //       completed: completed,\n      //   })\n      //   .then((res) => {\n      //       console.log(res);\n      //       navigate('/');\n      //   })\n      //   .catch((err) => console.log(err));\n      // }\n      \n\n    \n\n  \n\n    return (\n      <div className=\"wrapper\">\n        <div className=\"App-navbar\">\n          \n          <h2>Project Manager</h2>\n          \n        </div>\n\n        <div >\n          <h3>Backlog</h3>\n          { allProjects.map((Project, i) => {\n            return (\n\n              <div> \n                \n                {Project.backlog ? \n\n                <p key={ i } className=\"projectThumb\">\n                  \n                  <div style={{display: \"inline-block\"}}>\n                    \n                      <h4>{ Project.name }</h4>\n                      <p>Due Date: {Project.dueDate}</p>\n\n                   \n\n                    <button \n                      className=\"redButton\" \n                      onClick={(e) => backlogToInProgress(e)}>\n                        Start Project\n                    </button>\n                    \n                        \n                  \n                  </div>\n                </p>\n                \n                : null }\n              </div>   \n            )\n          })}\n        </div>\n        \n        \n        \n\n        <div>\n          <Link to=\"/Projects/new\">\n            <button className=\"blueButton\">Add New Project</button>\n          </Link>\n        </div>\n\n      </div>\n    )\n}\n\nexport default ShowAll;"]},"metadata":{},"sourceType":"module"}