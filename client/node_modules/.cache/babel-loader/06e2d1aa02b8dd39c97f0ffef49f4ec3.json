{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulmenendez/Documents/CodingDojo/MERN/MERNTemps/belt3/client/src/components/New.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router'; // console.log(\"loaded new.js\")\n\nconst New = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [url, setUrl] = useState(\"\"); // const [hasPegLeg, setHasPegLeg] = useState(true);\n  // const [hasEyePatch, setHasEyePatch] = useState(true);\n  // const [hasHookHand, setHasHookHand] = useState(true);\n\n  const [position, setPosition] = useState(\"Powder Monkey\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const [late, setLate] = useState(\"\"); // const [treasure, setTreasure] = useState(\"0\");\n  // const [catchPhrase, setCatchPhrase] = useState(\"\");\n  // const [imgUrlError, setImgUrlError] = useState(\"\");\n\n  console.log(\"load here?\");\n\n  const addProject = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8000/api/Projects/\", {\n      name: name,\n      // hasPegLeg: hasPegLeg,\n      // hasEyePatch: hasEyePatch,\n      // hasHookHand: hasHookHand,\n      position: position,\n      dueDate: dueDate,\n      // treasure: treasure,\n      url: url,\n      late: late // catchPhrase: catchPhrase,\n\n    }).then(res => {\n      console.log(res.data);\n\n      if (res.data.error.errors) {\n        setErrors(res.data.error.errors); // } else {\n        //     navigate(`/Projects/${res.data._id}`);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  const goHome = e => {\n    navigate(`/`);\n  };\n\n  const validateFirstName = e => {\n    // set is asynchronous\n    if (e.target.value.length < 3) {\n      setErrors({ ...errors,\n        name: {\n          message: \"name must be atleast 3 characters long\"\n        }\n      });\n    } else {\n      setErrors({ ...errors,\n        name: {\n          message: \"\"\n        }\n      });\n    }\n\n    setName(e.target.value);\n  }; // const validateUrl = (e) => {\n  //     // set is asynchronous\n  //     if (e.target.value.length < 3) {\n  //         setImgUrlError(\"URL must be atleast 3 characters long\");\n  //     } else {\n  //         setImgUrlError(\"\");\n  //     }\n  //     setUrl(e.target.value);  \n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: e => goHome(e),\n        className: \"blueButton\",\n        style: {\n          margin: \"5px 5px 5px 100px\"\n        },\n        children: \"Crew Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addProject,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fiftyFiftySplit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fiftyFiftySplit\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => addProject(e),\n            className: \"blueButton\",\n            children: \"Add Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(New, \"vvPE51/RHJPz2LOkF2WdXJFJCpo=\");\n\n_c = New;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["/Users/paulmenendez/Documents/CodingDojo/MERN/MERNTemps/belt3/client/src/components/New.js"],"names":["React","useState","axios","navigate","New","props","name","setName","errors","setErrors","url","setUrl","position","setPosition","dueDate","setDueDate","late","setLate","console","log","addProject","e","preventDefault","post","then","res","data","error","catch","err","goHome","validateFirstName","target","value","length","message","margin"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport {navigate} from '@reach/router'\n// console.log(\"loaded new.js\")\nconst New = (props) => {\n    const [name, setName] = useState(\"\");\n    const [errors, setErrors] = useState({});\n    const [url, setUrl] = useState(\"\");\n    // const [hasPegLeg, setHasPegLeg] = useState(true);\n    // const [hasEyePatch, setHasEyePatch] = useState(true);\n    // const [hasHookHand, setHasHookHand] = useState(true);\n    const [position, setPosition] = useState(\"Powder Monkey\");\n    const [dueDate, setDueDate] = useState(\"\");\n    const [late, setLate] = useState(\"\");\n    // const [treasure, setTreasure] = useState(\"0\");\n    // const [catchPhrase, setCatchPhrase] = useState(\"\");\n    // const [imgUrlError, setImgUrlError] = useState(\"\");\n\n    console.log(\"load here?\")\n\n    const addProject = (e) => {\n        e.preventDefault();\n        axios\n            .post(\"http://localhost:8000/api/Projects/\", {\n                name: name,\n                // hasPegLeg: hasPegLeg,\n                // hasEyePatch: hasEyePatch,\n                // hasHookHand: hasHookHand,\n                position: position,\n                dueDate: dueDate,\n                // treasure: treasure,\n                url: url,\n                late: late,\n                // catchPhrase: catchPhrase,\n            })\n            .then((res) => {\n                console.log(res.data);\n                if(res.data.error.errors){\n                    setErrors(res.data.error.errors);\n                // } else {\n                //     navigate(`/Projects/${res.data._id}`);\n                }\n            })\n            .catch((err) => console.log(err));\n    }\n\n    const goHome = (e) => {\n        navigate(`/`);\n    }\n\n    const validateFirstName = (e) => {\n        // set is asynchronous\n        if (e.target.value.length < 3) {\n            setErrors({ ...errors, name: { message: \"name must be atleast 3 characters long\"}});\n        } else {\n            setErrors({ ...errors, name: { message: \"\"}});\n        }\n        setName(e.target.value);  \n    }\n\n    // const validateUrl = (e) => {\n    //     // set is asynchronous\n    //     if (e.target.value.length < 3) {\n    //         setImgUrlError(\"URL must be atleast 3 characters long\");\n    //     } else {\n    //         setImgUrlError(\"\");\n    //     }\n    //     setUrl(e.target.value);  \n    // }\n\n    return (\n        <div >\n            <div className= \"App-navbar\">\n                <h2>Add Project</h2>\n                <button type=\"submit\" onClick = {(e) => goHome(e)} className=\"blueButton\" style={{margin: \"5px 5px 5px 100px\"}}>\n                    Crew Board\n                </button>\n            </div>\n            <div className=\"wrapper\">\n                <form onSubmit={addProject}>\n                    <div className=\"fiftyFiftySplit\"> \n\n                        {/* <div>\n                            <label style= {{display: \"block\"}}>Project Name</label>\n                            {errors.name ? (\n                                <span>{errors.name.message}</span>\n                            ) : null\n                            }\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                value={name}\n                                onChange={ validateFirstName }\n                            />\n                        </div> */}\n\n                        {/* <div>\n                            <label style= {{display: \"block\"}}>Image URL</label>\n                                {errors.url ? (\n                                    <p>{errors.url.message}</p>\n                                ) : null\n                                }\n                                {imgUrlError !== \"\" ? (\n                                    <p>{imgUrlError}</p>\n                                ) : null\n                                }\n                                <input\n                                    type=\"text\"\n                                    name=\"url\"\n                                    value={url}\n                                    onChange={validateUrl}\n                                />\n                        </div> */}\n\n                        {/* <label style= {{display: \"block\"}}># of Treasure Chests</label>\n                        <select name=\"position\" onChange={(e) => setTreasure(e.target.value)}>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                        </select> */}\n\n                        {/* <div>\n                            <label style= {{display: \"block\"}}>Project Catch Phrase</label>\n                                {errors.catchPhrase ? (\n                                    <span>{errors.catchPhrase.message}</span>\n                                ) : null\n                                }\n                                <input\n                                    type=\"text\"\n                                    name=\"catchPhrase\"\n                                    value={catchPhrase}\n                                    onChange={(e) => setCatchPhrase(e.target.value)}\n                                />\n                        </div> */}\n\n                    </div>\n                    <div className=\"fiftyFiftySplit\">\n                        {/* <div>\n                            <label style= {{display: \"block\"}}>Crew Position</label>\n                            <select name=\"position\" onChange={(e) => setPosition(e.target.value)}>\n                                <option value=\"Captain\">Captain</option>\n                                <option value=\"First Mate\">First Mate</option>\n                                <option value=\"Quarter Master\">Quarter Master</option>\n                                <option value=\"Boatswain\">Boatswain</option>\n                                <option value=\"Powder Monkey\">Powder Monkey</option>\n                            </select>\n                        </div> */}\n\n                        {/* <div>\n                            {errors.hasPegLeg ? (\n                                <span>{errors.hasPegLeg.message}</span>\n                            ) : null\n                            }\n                            <input\n                                type=\"checkbox\"\n                                name=\"pegLeg\"\n                                checked={hasPegLeg}\n                                onChange={(e) => setHasPegLeg(e.target.checked)}\n                            />\n                            <label>Peg Leg</label>      \n                        </div> */}\n\n                        {/* <div>\n                            {errors.hasEyePatch ? (\n                                <span>{errors.hasEyePatch.message}</span>\n                            ) : null\n                            }\n                            <input\n                                type=\"checkbox\"\n                                name=\"eyePatch\"\n                                checked={hasEyePatch}\n                                onChange={(e) => setHasEyePatch(e.target.checked)}\n                            />\n                            <label>Eye Patch</label>      \n                        </div> */}\n\n                        {/* <div>\n                            {errors.hasHookHand ? (\n                                <span>{errors.hasHookHand.message}</span>\n                            ) : null\n                            }\n                            <input\n                                type=\"checkbox\"\n                                name=\"hookHand\"\n                                checked={hasHookHand}\n                                onChange={(e) => setHasHookHand(e.target.checked)}\n                            />\n                            <label>Hook Hand</label>      \n                        </div> */}\n\n                            <button type=\"submit\" onClick = {(e) => addProject(e)} className=\"blueButton\">\n                                Add Project\n                            </button>\n                        \n                    </div> \n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default New;"]},"metadata":{},"sourceType":"module"}