{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulmenendez/Documents/CodingDojo/MERN/MERNTemps/belt3/client/src/components/ShowAll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport '../App.css';\n\nconst ShowAll = props => {\n  _s();\n\n  const [allProjects, setAllProjects] = useState([]);\n  const [backlog, setBacklog] = useState();\n  const [inProgress, setInProgress] = useState();\n  const [completed, setCompleted] = useState();\n  const [name, setName] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/Projects\").then(res => {\n      console.log(res.data);\n      setAllProjects(res.data);\n    }).catch(err => console.log(err));\n  }, []); // const deleteProject = (e, ProjectId) => {\n  //     e.preventDefault();\n  //     axios\n  //         .delete(`http://localhost:8000/api/Projects/${ProjectId}`)\n  //         .then((res) => {\n  //             console.log(res.data);\n  //             setAllProjects(allProjects.filter((Project) => Project._id !== ProjectId))\n  //         })\n  //         .catch((err) => console.log(err));\n  // }\n\n  const backlogToInProgress = (e, b) => {\n    e.preventDefault();\n    console.log(`${allProjects.b}`); // // console.log(`Backlog is ${Project.backlog}`)\n    //   console.log(\"my backlog function\")\n    //   let updatedProject = Project;\n    //   if (updatedProject.backlog===true){\n    //       updatedProject.backlog = false;\n    //       updatedProject.inProgress = true;\n    //   }\n    //   else { //if (Project.hasPegLeg === false){\n    //       updatedProject.backlog = true;\n    //   }\n    //   setBacklog(updatedProject.backlog);\n    //   setInProgress(updatedProject.inProgress);  // set is asyncrhonous\n    //   console.log(`backlog is ${updatedProject.hasPegLeg} and in Progress is ${updatedProject.inProgress}`);\n    //   axios\n    //       .put(`http://localhost:8000/api/Projects/${props.id}`, updatedProject)\n    //   .then((res) => {\n    //           navigate(`/`)   \n    //   })\n    //   .catch((err)=>console.log(err));\n  }; // console.log(\"backlog button clicked\")\n  // setBacklog(false);\n  // setInProgress(true);\n  // console.log(Project)\n  // if(backlog===false){\n  //   axios\n  //   .put(`http://localhost:8000/api/Projects/${props.id}`, {\n  //       name: name,\n  //       dueDate: dueDate,\n  //       backlog: backlog,\n  //       inProgress: inProgress,\n  //       completed: completed,\n  //   })\n  //   .then((res) => {\n  //       console.log(res);\n  //       navigate('/');\n  //   })\n  //   .catch((err) => console.log(err));\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Project Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"span\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"colTitle\",\n        children: \"Backlog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aThird\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Backlog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), allProjects.map((Project, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: Project.backlog ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"projectThumb\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline-block\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: Project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Due Date: \", Project.dueDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"redButton\",\n                onClick: backlogToInProgress,\n                children: \"Start Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aThird\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"In Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), allProjects.map((Project, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: Project.inProgress ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"projectThumb\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline-block\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: Project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Due Date: \", Project.dueDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: Project._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"redButton\",\n                onClick: backlogToInProgress,\n                children: \"Start Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aThird\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), allProjects.map((Project, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: Project.completed ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"projectThumb\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline-block\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: Project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Due Date: \", Project.dueDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: Project._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"redButton\",\n                onClick: backlogToInProgress,\n                children: \"Start Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Projects/new\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"blueButton\",\n          style: {\n            width: \"300px\"\n          },\n          children: \"Add New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ShowAll, \"tovgwgOAgIR4lB/3x/f5n1RUxO4=\");\n\n_c = ShowAll;\nexport default ShowAll;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowAll\");","map":{"version":3,"sources":["/Users/paulmenendez/Documents/CodingDojo/MERN/MERNTemps/belt3/client/src/components/ShowAll.js"],"names":["React","useState","useEffect","Link","navigate","axios","ShowAll","props","allProjects","setAllProjects","backlog","setBacklog","inProgress","setInProgress","completed","setCompleted","name","setName","dueDate","setDueDate","get","then","res","console","log","data","catch","err","backlogToInProgress","e","b","preventDefault","width","map","Project","i","display","_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport {Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport '../App.css';\n\n\n\n\n\n\n\nconst ShowAll = (props) => {\n    const [allProjects, setAllProjects] = useState([]);\n    const [backlog, setBacklog] = useState();\n    const [inProgress, setInProgress] = useState();\n    const [completed, setCompleted] = useState();\n    const [name, setName] = useState(\"\");\n    const [dueDate, setDueDate] = useState(\"\");\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:8000/api/Projects\")\n            .then((res) => {\n                console.log(res.data);\n                setAllProjects(res.data);\n              })\n            .catch(err => console.log(err));\n        \n    }, [])\n\n    // const deleteProject = (e, ProjectId) => {\n    //     e.preventDefault();\n    //     axios\n    //         .delete(`http://localhost:8000/api/Projects/${ProjectId}`)\n    //         .then((res) => {\n    //             console.log(res.data);\n    //             setAllProjects(allProjects.filter((Project) => Project._id !== ProjectId))\n    //         })\n    //         .catch((err) => console.log(err));\n    // }\n\n    const backlogToInProgress = (e, b) => {\n      e.preventDefault();\n      console.log(`${allProjects.b}`)\n\n      // // console.log(`Backlog is ${Project.backlog}`)\n      //   console.log(\"my backlog function\")\n      //   let updatedProject = Project;\n\n      //   if (updatedProject.backlog===true){\n      //       updatedProject.backlog = false;\n      //       updatedProject.inProgress = true;\n      //   }\n      //   else { //if (Project.hasPegLeg === false){\n      //       updatedProject.backlog = true;\n      //   }\n      //   setBacklog(updatedProject.backlog);\n      //   setInProgress(updatedProject.inProgress);  // set is asyncrhonous\n      //   console.log(`backlog is ${updatedProject.hasPegLeg} and in Progress is ${updatedProject.inProgress}`);\n      //   axios\n      //       .put(`http://localhost:8000/api/Projects/${props.id}`, updatedProject)\n      //   .then((res) => {\n      //           navigate(`/`)   \n      //   })\n      //   .catch((err)=>console.log(err));\n    }\n\n\n\n\n      // console.log(\"backlog button clicked\")\n      // setBacklog(false);\n      // setInProgress(true);\n      // console.log(Project)\n      \n      // if(backlog===false){\n        \n      //   axios\n      //   .put(`http://localhost:8000/api/Projects/${props.id}`, {\n      //       name: name,\n      //       dueDate: dueDate,\n      //       backlog: backlog,\n      //       inProgress: inProgress,\n      //       completed: completed,\n      //   })\n      //   .then((res) => {\n      //       console.log(res);\n      //       navigate('/');\n      //   })\n      //   .catch((err) => console.log(err));\n      // }\n      \n\n    \n\n  \n\n    return (\n      <div >\n        <div>\n          \n          <h2>Project Manager</h2>\n          \n        </div>\n        <div style={{width: \"span\"}}>\n        <h3 className=\"colTitle\">Backlog</h3>\n\n        </div>\n\n        <div className=\"aThird\">\n          <h3>Backlog</h3>\n          { allProjects.map((Project, i) => {\n            return (\n              <div>  \n                {Project.backlog ? \n                <p key={ i } className=\"projectThumb\">\n                  <div style={{display: \"inline-block\"}}>\n                    \n                      <h4>{ Project.name }</h4>\n                      <p>Due Date: {Project.dueDate}</p>\n                      {/* <p>{Project._id}</p> */}\n                    <button \n                      className=\"redButton\" \n                      onClick={backlogToInProgress}>\n                        Start Project\n                    </button>\n                           \n                  </div>\n                </p>\n                \n                : null }\n              </div>   \n            )\n          })}\n        </div>\n\n        <div className=\"aThird\">\n          <h3>In Process</h3>\n          { allProjects.map((Project, i) => {\n            return (\n              <div>  \n                {Project.inProgress ? \n                <p key={ i } className=\"projectThumb\">\n                  <div style={{display: \"inline-block\"}}>\n                    \n                      <h4>{ Project.name }</h4>\n                      <p>Due Date: {Project.dueDate}</p>\n                      <p>{Project._id}</p>\n                    <button \n                      className=\"redButton\" \n                      onClick={backlogToInProgress}>\n                        Start Project\n                    </button>\n                           \n                  </div>\n                </p>\n                \n                : null }\n              </div>   \n            )\n          })}\n        </div>\n\n        <div className=\"aThird\">\n          <h3>Completed</h3>\n          { allProjects.map((Project, i) => {\n            return (\n              <div>  \n                {Project.completed ? \n                <p key={ i } className=\"projectThumb\">\n                  <div style={{display: \"inline-block\"}}>\n                    \n                      <h4>{ Project.name }</h4>\n                      <p>Due Date: {Project.dueDate}</p>\n                      <p>{Project._id}</p>\n                    <button \n                      className=\"redButton\" \n                      onClick={backlogToInProgress}>\n                        Start Project\n                    </button>\n                           \n                  </div>\n                </p>\n                \n                : null }\n              </div>   \n            )\n          })}\n        </div>\n        \n        \n        \n\n        <div>\n          <Link to=\"/Projects/new\">\n            <button className=\"blueButton\" style={{width:\"300px\"}}>Add New Project</button>\n          </Link>\n        </div>\n\n      </div>\n    )\n}\n\nexport default ShowAll;"]},"metadata":{},"sourceType":"module"}